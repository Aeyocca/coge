<TMPL_IF NAME=MAIN>
<SCRIPT language="JavaScript" type="text/javascript" src="./js/jquery.tablesorter.2.0.3.js"></SCRIPT>

<script language="javascript">

function init_table() {
 $("#prev_table").tablesorter({		
		sortClassAsc: 'headerSortUp',		// Class name for ascending sorting action to header
		sortClassDesc: 'headerSortDown',	// Class name for descending sorting action to header
		headerClass: 'header',		// Class name for headers (th's)
		widgets: ['zebra'],
		textExtraction: 'complex'
		});
 }

$(function() {$("#pair_info").draggable();});
$(function() {$("#tabs").tabs({selected:0});});	     
$(function() {$(".resizable").resizable();});


function get_organism_chain(type,val,i)
{
 $('#org_list').html('<input type=hidden id = "org_id"+i><font class="loading"></font>');
 if (type == 'name') {get_orgs(['args__name','args__'+val,'args__i','args__'+i], ['org_list'+i]);}
 else if (type == 'desc') {get_orgs(['args__desc','args__'+val,'args__i','args__'+i], ['org_list'+i]);}
 $('#dsg_info'+i).html('<div class="loading dna_small small">loading. . .</div>');
 ajax_wait("gen_dsg_menu(['args__oid','org_id"+i+"', 'args__num','args__"+i+"'],['dsg_menu"+i+"', 'genome_message"+i+"']);");
// gen_dsg_menu(['args__oid','org_id"+i+"', 'args__num','args__"+i+"'],['dsg_menu"+i+"', 'genome_message"+i+"']);
 ajax_wait("check_previous_analyses();");   
 ajax_wait("get_dataset_group_info(['args__dsgid','dsgid"+i+"','args__org_num','args__"+i+"'],['dsg_info"+i+"','feattype_menu"+i+"','genome_message"+i+"']);");
}

function get_dataset_group_info_chain(i)
{
 $('#dsg_info'+i).html('<div class=dna_small class=loading class=small>loading. . .</div>'); 
 // ajax_wait("gen_dsg_menu(['args__oid','org_id"+i+"', 'args__num','args__"+i+"'],['dsg_menu"+i+"','genome_message"+i+"']);");
 gen_dsg_menu(['args__oid','org_id'+i, 'args__num','args__'+i],['dsg_menu'+i, 'genome_message'+i]);
 $('#depth_org_1').html($('#org_id1 option:selected').html());
 $('#depth_org_2').html($('#org_id2 option:selected').html());

 ajax_wait("check_previous_analyses();");   
 ajax_wait("get_dataset_group_info(['args__dsgid','dsgid"+i+"','args__org_num','args__"+i+"'],['dsg_info"+i+"','feattype_menu"+i+"','genome_message"+i+"']);");
}

	

function run_synmap(){
if(!pageObj.basename) 
  {
  	setTimeout("run_synmap()", 100);
  	return;
  }
	$('#results').hide(0);  	
  	$('#log_text').show(0);

  pageObj.nolog=1;
  setTimeout("monitor_log()", 5000);
  
go(['args__c','c','args__D','D','args__g','g','args__A','A','args__gm','gm','args__Dm','Dm','args__blast','blast', 'args__feat_type1','feat_type1', 'args__feat_type2','feat_type2','args__dsgid1','dsgid1', 'args__dsgid2','dsgid2','args__jobtitle','jobtitle','args__basename','args__'+pageObj.basename,'args__email','email','args__regen_images','args__'+$('#regen_images')[0].checked, 'args__width', 'args__'+$('#master_width').val(), 'args__dagchainer_type','args__'+$('#dagchainer_type')[0].checked, 'args__ks_type','ks_type', 'args__assemble','args__'+$('#assemble')[0].checked, 'args__axis_metric','axis_metric', 'args__min_chr_size', 'min_chr_size', 'args__show_non_syn','args__'+$('#show_non_syn')[0].checked, 'args__color_type','color_type', 'args__box_diags', 'args__'+$('#box_diags')[0].checked, 'args__merge_algo','merge_algo', 'args__depth_algo', 'depth_algo', 'args__depth_org_1_ratio', 'depth_org_1_ratio', 'args__depth_org_2_ratio', 'depth_org_2_ratio', 'args__depth_overlap', 'depth_overlap'],[handle_results] );
}

function handle_results(val){
 $('#log_text').hide(0);
 $('#results').show(0).html(val);
 $(function() {$("#synmap_zoom_box").draggable();});
 ajax_wait("check_previous_analyses();");
}

function check_previous_analyses(){
 get_previous_analyses(['args__oid1','org_id1', 'args__oid2','org_id2'],[load_previous_analyses]);
}

function load_previous_analyses (stuff) {
 $('#previous_analyses').html(stuff);
 init_table();
}

function update_params(val) {
 var params;
 if (val)
   {
     params = val.split('_');
   }
 else
   {
     params = $('#prev_params').val()[0].split('_');;
   }

 var cmd;
 if ($('#org_id1').val() == params[5])
  {
    cmd = "$('#feat_type1').attr('value', '"+params[7]+"');$('#feat_type2').attr('value', '"+params[10]+"');";
    $('#dsgid1').attr('value',params[6]);
    $('#dsgid2').attr('value',params[9]);
  }
 else
  {
    cmd = "$('#feat_type2').attr('value', '"+params[7]+"');$('#feat_type1').attr('value', '"+params[10]+"');";
    $('#dsgid2').attr('value',params[6]);
    $('#dsgid1').attr('value',params[9]);
  }
 get_dataset_group_info(['args__dsgid','dsgid1','args__org_num','args__1'],['dsg_info1', 'feattype_menu1','genome_message1']);
 get_dataset_group_info(['args__dsgid','dsgid2','args__org_num','args__2'],['dsg_info2', 'feattype_menu2','genome_message2']);
 ajax_wait(cmd);
 var type;
 $('#blast option:eq('+params[0]+')').attr('selected','selected');
 $('#merge_algo option:eq('+params[14]+')').attr('selected','selected');
 if (params[12] == 'Distance') 
  {
   $("input[name='dagchainer_type']:nth(1)").attr("checked","checked");
   type=" bp";
  }
 else 
  {
   $("input[name='dagchainer_type']:nth(0)").attr("checked","checked");
   type= " genes"
  }
 display_dagchainer_settings([params[0],params[1],params[2], params[3],params[4]],type);
 $('#c').val(params[13]);
 merge_select_check();
 depth_algo_check();
}

function set_dagchainer_defaults(params, type) {
  var settings = $('#dagchainer_default').val();
  if (!(params && type))
   {
    if ($('#dagchainer_type')[0].checked)
     {
       params = [10,20,5,0,0];
       type = " genes";  
     } 
    else
     { 
      if (settings == 1) // for plant genomes
       { params = [24000, 120000, 3, 96000,480000];}
      else if (settings == 2) // for microbe genomes
       { params = [1000, 2000, 3, 4000, 8000];}
       type=" bp";
     }
  }
  if (!params) {return;}
  $('#g').val(params[0]);
  $('#D').val(params[1]);
  $('#A').val(params[2]);
  if (typeof(params[3]) == 'undefined') { params[3] = 4*params[0];}
  if (typeof(params[4]) == 'undefined') { params[4] = 4*params[1];}
  $('#gm').val(params[3]);
  $('#Dm').val(params[4]);
  $('.distance_type').html(type);
 }

function ajax_wait (val){
 if (ajax.length)
   {
    setTimeout("ajax_wait("+'"'+val+'"'+")",100);
    return;
   }
 eval(val);
}

function timing(val, val2){
  namere = /name/;
  descre = /desc/;
  if (namere.exec(val)) 
   {
    searchterm = $('#'+val).val();
   }
  else if (descre.exec(val)) 
   {
    searchterm = $('#'+val).val();
   }
  var searchterm;
  if (!searchterm) {val=0;}
  if(searchterm == "Search")
  {
    searchterm = "";
  }
  pageobjsearch = "search"+val;
  pageobjtime = "time"+val;
  if (pageObj.pageobjsearch && pageObj.pageobjsearch == searchterm+val)
   {
    return;
   }
  pageObj.pageobjsearch=searchterm+val;
  if (pageObj.pageobjtime){
   clearTimeout(pageObj.pageobjtime);
  }
  re = /(\d+)/;
  i = re.exec(val);

  if (namere.exec(val)) 
   {
     if (val2)
     {
      get_organism_chain('name',$('#'+val).val(),i[0])
     }
     else
     {
       pageObj.pageobjtime = setTimeout("get_organism_chain('name',$('#"+val+"').val(),i[0])",500);
     }

   }
  else if (descre.exec(val)) 
   {
     if (val2)
     {
      get_organism_chain('desc',$('#'+val).val(),i[0])
     }
     else
     {
       pageObj.pageobjtime = setTimeout("get_organism_chain('desc',$('#"+val+"').val(),i[0])",200);
     }
   }  
}

$(document).ready(function(){
  if($('#org_name1').val() != "Search") {
    $('#org_name1').css({fontStyle: "normal"});
    timing('org_name1',1);
  }  
  if($('#org_desc1').val() != "Search") {
    $('#org_desc1').css({fontStyle: "normal"});
    timing('org_desc1',1);
  }  
  if($('#org_name2').val() != "Search") {
    $('#org_name2').css({fontStyle: "normal"});
    timing('org_name2',1);
  }  
  if($('#org_desc2').val() != "Search") {
    $('#org_desc2').css({fontStyle: "normal"});
    timing('org_desc2',1);
  }
  ajax_wait("check_previous_analyses();"); 
    <TMPL_VAR NAME=DISPLAY_DAGCHAINER_SETTINGS>
 var autogo = <TMPL_VAR NAME=AUTOGO>;
 if (autogo) {
    generate_basefile([],[update_basename]);
    run_synmap();
    }
 if ($('#assemble')[0].checked)
  {
   $('#assemble_info').toggle();
  }
  $(".options tr:even").addClass("even");
  merge_select_check();
  depth_algo_check();	
 $('#depth_org_1').html($('#org_id1 option:selected').html());
 $('#depth_org_2').html($('#org_id2 option:selected').html());

 });


function display_dagchainer_settings(params,type) {
 
 if ($('#dagchainer_type')[0].checked)
  {
   $('#dagchainer_distance').hide(0);
  }
 else
  {
   $('#dagchainer_distance').show(0);
  }
  set_dagchainer_defaults(params, type);
}

function search_bar(div_id){
  if($('#'+div_id).val() == "Search") $('#'+div_id).val("").css({fontStyle: "normal"});
}

function restore_search_bar(div_id){
  if(! $('#'+div_id).val()) {
    $('#'+div_id).val("Search").css({fontStyle: "italic"});
  }
}

//These two functions are involved with emailing results
function toggle_email_field(){
	if ($('#check_email')[0].checked)
	{
		$('.email_box').show(0);
	}
	else{
		$('.email_box').hide(0);
		$('#email').val('');
		$('#email_error').hide(0);
	}
}

function address_validity_check(validity){
	if (validity)
	{
		if(validity == 'invalid'){
		$('#email_error').show(0);
		}
		else{
		$('#email_error').hide(0);
		}
	}
	else{
	check_address_validity(['email'],[address_validity_check]);
	}
}

function fill_jobtitle(){
	var org1 = $('#org_id1 option:selected').html() || 0;
	var org2 = $('#org_id2 option:selected').html() || 0;
	
	if (org1 != 0) {org1 = org1.replace(/\s+\(id\d+\)$/,"");}
	if (org2 != 0) {org2 = org2.replace(/\s+\(id\d+\)$/,"");}
	
	var title;
	
	if (org1 != 0 && org2 != 0) title = org1+" v. "+org2;
	else if (org1 != 0) title = org1;
	else if (org2 != 0) title = org2;
	else return;
	
	$('#jobtitle').val(title);
}

function update_basename(basename){
	pageObj.basename=basename;
}

function reset_basename(){
	if(pageObj.basename) pageObj.basename=0;
}
 function monitor_log(log)
{

  var fasta = 0;
  var blast = 0;
  var blastdb = 0;
  var dag = 0;
  var converting=0;
  var ks = 0;
  var results = 0;
  var match;
  pageObj.finished = 0;
  if (log) {
  if(log.match(/fasta file/i)) fasta="Generating fasta files . . . ";
  if(log.match(/Completed fasta creation/i)) {
  	fasta += "done!<br/>";
  	blastdb = "Generating blastable databases . . . ";
  }
  if(log.match(/Completed blastdb creation/i)) {
  	blastdb += "done!<br/>";
  	blast = "Running blast . . . ";
  }
   if(log.match(/Completed blast run/i)) {
  	blast += "done!<br/>";
  	dag = "Running DAGChainer . . . ";
  }
  if(log.match(/Completed dagchainer run/i)) {
  	dag += "done!<br/>";
  	results = "Generating images . . . ";
  	pageObj.finished = 1;
  }
  if(log.match(/Generating ks data/i)) {
  	ks = "Calculating synonymous changes (may take a while) . . . ";
        results = 0;
  	pageObj.finished = 1;
  }
  if(ks && log.match(/Completed generating ks data/i)) {
  	ks += "done!<br/>";
  	results = "Generating images . . . ";
  	pageObj.finished = 1;
  }
 }
  

  else {pageObj.nolog += 1;}
  var message = "Initializing search . . . ";
  
  if (fasta) message += "done!<br/>"+fasta;
  if (blastdb) message += blastdb;
  if (blast) message += blast;
  if (dag) message += dag;
  if (ks) message += ks;
  if (results) message += results;
  
  if (!pageObj.finished && pageObj.nolog<8) {setTimeout("read_log(['args__logfile', 'args__'+pageObj.basename, 'args__prog','args__SynMap'], [monitor_log])",5000);}
  
  if (message) $('#log_text').html(message);
}

function synteny_zoom(dsgid1, dsgid2, basename, chr1, chr2, ksdb)
{
 var url = '/CoGe/run_dotplot.pl?dsg1='+dsgid1+';dsg2='+dsgid2+';chr1='+chr1+';chr2='+chr2+';base='+basename;
 var loc = $('#map_loc').val();
 var width = $('#zoom_width').val();
 var min = $('#zoom_min').val();
 var max = $('#zoom_max').val();
 var am = $('#axis_metric').val();
    var loc = pageObj.loc;
    if (!loc) {loc=1;}
    loc++;
    pageObj.loc=loc;
    win = window.open ('DisplayMessage.pl', 'win'+loc,'width=400,height=200,scrollbars=1');
    win.focus();
    get_dotplot(['args__src','args__'+url, 'args__loc','args__'+loc, 'args__flip','args__'+$('#flip')[0].checked,'args__regen_images','args__'+$('#regen_images')[0].checked, 'args__width', 'args__'+width, 'args__ksdb','args__'+ksdb,'args__kstype','ks_type','args__min', 'args__'+min,'args__max', 'args__'+max, 'args__am', 'args__'+am, 'args__bd', 'args__'+$('#box_diags')[0].checked],[open_window]);

}

function open_window (url, loc, width, height)
 {
    if (!loc) {loc = pageObj.loc;}
    if (!loc) {loc=1;}
    my_window = window.open(url,"win"+loc,'"width='+width+',height='+height+', scrollbars=1"');
    my_window.resizeTo(width,height);
 }

function merge_select_check () 
 {
   var merge_algo = $('#merge_algo').val();
   if (merge_algo == 0)
    {
      $('#merge_algo_options').hide();
    }
   else if (merge_algo == 1)
    {
      $('#merge_algo_options').show();
      $('#max_dist_merge').hide();
    }
   else
    {
      $('#merge_algo_options').show();
      $('#max_dist_merge').show();
    }
 }

function depth_algo_check()
 {
   var depth_algo = $('#depth_algo').val();
   if (depth_algo == 0)
    {
      $('#depth_options').hide();
    }
   else if (depth_algo == 1)
    {
      $('#depth_options').show();
    }
 }

function post_to_grimm(seq1, seq2)
 {
   seq1 = seq1.replace(/\|\|/g,"\n");
   seq2 = seq2.replace(/\|\|/g,"\n");
   var url = "http://nbcr.sdsc.edu/GRIMM/grimm.cgi#report";
   var myForm = document.createElement("FORM");
   myForm.method="post" ;
   myForm.action=url;
   myForm.setAttribute("target", "_blank");
   myForm.setAttribute("name", "genomeForm");
   var myInput = document.createElement("textarea");
   myInput.name="genome1";
   myInput.value=seq1;
   myForm.appendChild(myInput);
   document.body.appendChild(myForm);
   var myInput = document.createElement("textarea");
   myInput.name="genome2";
   myInput.value=seq2;
   myForm.appendChild(myInput);
   document.body.appendChild(myForm);
   myForm.submit("action");
   document.body.removeChild(myForm);
 }

</script>
<table class=backbox><tr><td>
<DIV id=log_text class="small dna" style="display:none"></DIV>
<DIV id=results><TMPL_IF NAME=RESULTS><TMPL_VAR NAME=RESULTS><TMPL_ELSE>
<div style="clear: both;"> </div>
<span class="alert" style="float:left; margin-right: 5px; ">Please Note:</span>  
<div style="float: left">SynMap is a very computationally intense, multi-step program which may take hours to complete for large genomes.<br>If available, select previously run parameter-sets for your organisms to see results instantly.</div>


<div style="clear: both;"> </div>
<hr>
<span class="alert" style="float: left; margin-right: 5px;">Get Started:</span> 
<div style="float: left"><div class="link" onclick=window.open("SynMap.pl?dsgid1=3068;dsgid2=8;D=20;g=10;A=5;w=0;b=1;ft1=1;ft2=1;dt=geneorder;ks=1;autogo=1")>Click here for an example analysis between <i>Arabidopsis thaliana</i> and <i>Arabidopsis lyrata</i>.</div><span class=small>(Note that syntenic gene pairs are colored by synonymous mutations (Ks))</span><div class="link" onclick=window.open("http://synteny.cnr.berkeley.edu/wiki/index.php/SynMap#Example_Results")>Click here for an explaination of the results.</div ></div>


</TMPL_IF>
</div>
</table>


<span style="font-size: 1em" class="ui-button ui-state-default ui-corner-all" id="synmap_go" onClick="jQuery('html, body').animate({scrollTop: 0}, 2000); reset_basename();generate_basefile([],[update_basename]);run_synmap();" >Generate SynMap</span>

<span style="font-size: 1em" class='ui-button ui-state-default ui-corner-all' onClick="$('#results').html('');" >Clear Results</span>

<div id=tabs style='margin-top: 0.5em'>

<ul>
 <li class=small><a href="#tab-1">Select Organisms</a></li>
 <li class=small><a href="#tab-2">Analysis Options</a></li>
 <li class=small><a href="#tab-3">Display Options</a></li>
</ul>


<div id="tab-1">
 <table><tr valign=top>
  <TMPL_VAR NAME=ORG_MENU1>
  <TMPL_VAR NAME=ORG_MENU2>
 </table>

</div> <!--close tab-1 -->

<div id="tab-2">

<table id=algo_table  class="options">
 <tr>
   <td style="color:#009900">Blast Algorithm:
   <td><select id="blast" name="blast">
        <OPTION VALUE="1" <TMPL_VAR NAME="BLASTN_SELECT">">BlastN
        <OPTION VALUE="2" <TMPL_VAR NAME="TBLASTX_SELECT">">TBlastX
       </select>
 <tr>
   <td style="color:#009900">Filter Repetitive Matches:
   <td>Expected number of hits per sequence <input type=text size=2 id="c" name="c" value="<TMPL_VAR NAME="CVALUE">">
  <tr valign=top class="odd">
  <td style="color:#009900">DAGChainer Options:
  <td>
    <label>Relative Gene Order<input id="dagchainer_type" name="dagchainer_type" type=radio value="gene_order" <TMPL_VAR DAG_GENE_SELECT>  onCLick="display_dagchainer_settings()"></label>
    <label>Nucleotide Distance<input id="dagchainer_type" name="dagchainer_type" type=radio value="distance" <TMPL_VAR DAG_DISTANCE_SELECT>  onCLick="display_dagchainer_settings()"></label><span class=small>We recommend using "Relative Gene Order"</span>


   <span id=dagchainer_distance>Default distance settings for:
      <select id="dagchainer_default" onChange="set_dagchainer_defaults();">
       <option value="1">Plant
       <option value="2">Microbe
      </select>
    </span>

 <table>
 <TR>
   <TD>
   <TD>
 <TR>
   <TD>Average distance expected between syntenic genes (-g):
   <TD><input type=text size=8 id="g" value=""><span class=distance_type></span>
 <TR>
   <TD>Maximum distance between two matches (-D): 
   <TD><input type=text size=8 id="D" value=""><span class=distance_type></span>
 <TR>
   <TD>Minimum number of aligned pairs (-A): 
   <TD><input type=text size=8 id="A" value=""> genes
</TABLE>


<tr valign=top>
  <td style="color:#009900">Merge Syntenic Blocks:
  <td>
   Algorithm: 
       <select id="merge_algo" name="merge_algo" onchange="merge_select_check()">
        <OPTION VALUE="0"> --None--
        <OPTION VALUE="1" <TMPL_VAR NAME="QUOTA_MERGE_SELECT">">Quota Align Merge
        <OPTION VALUE="2" <TMPL_VAR NAME="DAG_MERGE_SELECT">">Interative DAGChainer
       </select> <br>
 <span class=small>These settings will merge neighboring syntenic blocks.  We recommend "Quota Align".</span>
 <table id="merge_algo_options">
   <TR id="max_dist_merge">
     <TD>Average distance expected between syntenic blocks (-gm):
     <TD><input type=text size=8 id="gm" value=""><span class=distance_type></span>
   <TR>
     <TD>Maximum distance between two blocks (-Dm): 
     <TD><input type=text size=8 id="Dm" value=""><span class=distance_type></span>
 </TABLE>

<tr valign=top>
  <td style="color:#009900">Syntenic Depth
  <td>Algorithm: 
       <select id="depth_algo" name="depth_algo" onchange="depth_algo_check()">
        <OPTION VALUE="0"> --None--
        <OPTION VALUE="1" <TMPL_VAR NAME="QUOTA_ALIGN_SELECT">">Quota Align
       </select> <br>
       <div id=depth_options style="display:none">
        Ratio of coverage depth: 
        <span style="color:#009900" id=depth_org_1></span>
        <input type=text size=2 id="depth_org_1_ratio" value="<TMPL_VAR NAME="DEPTH_ORG_1_RATIO">">
         -to-
        <input type=text size=2 id="depth_org_2_ratio" value="<TMPL_VAR NAME="DEPTH_ORG_2_RATIO">">
        <span style="color:#009900" id=depth_org_2></span><br>
        Overlap distance: <input type=text size=8 id="depth_overlap" value="<TMPL_VAR NAME="DEPTH_OVERLAP"> ">
       </div>


<tr valign=top>
<td style="color:#009900">CodeML
<td>Calculate syntenic CDS pairs and color dots: 
  <select name="ks_type" id = "ks_type">
     <option value = 0 <TMPL_VAR NAME=KS0> >--None--</option>
     <option value = ks <TMPL_VAR NAME=KS1> >Synonymous (Ks)</option>
     <option value = kn <TMPL_VAR NAME=KS2> >Non-synonymous (Kn)</option>
     <option value = kn_ks <TMPL_VAR NAME=KS3> >Kn/Ks</option>
   </select> substitution rates <span style="color:red">(SLOW)</span>
   <br>
   <span class=small style="color:red">&nbsp;&nbsp;&nbsp;&nbsp; Only applicable to protein coding sequences (CDS vs. CDS)</span> 
</table>
</div> <!-- close tab-2 -->

<div id="tab-3">
<table class="options">
 <TR>
   <TD>Regenerate dotplot images?
   <input type=checkbox name="regen_images" id="regen_images">
 <tr>
   <td>Color diagonals by: 
   <select name=color_type id=color_type>
     <option value = 0 <TMPL_VAR NAME=COLOR_TYPE_NONE> > Single color </option>
     <option value = inv <TMPL_VAR NAME=COLOR_TYPE_INV> > Inversions </option>
     <option value = diag <TMPL_VAR NAME=COLOR_TYPE_DIAG> > Diagonals </option>
   </select>
   <br>
   <span class=small style="color:red">&nbsp;&nbsp;&nbsp;&nbsp;Synonymous rates will supercede this option.</span> 
 <tr>
   <td>Draw boxes around syntenic regions?
   <input type=checkbox name="box_diags" id="box_diags" <TMPL_VAR NAME=BOX_DIAGS> >
 <tr>
  <td>Dotplot axis metric:
  <select name="axis_metric" id = "axis_metric">
   <option value = "nt" <TMPL_VAR NAME=AXIS_METRIC_NT>>Nucleotides</option>
   <option value = "gene" <TMPL_VAR NAME=AXIS_METRIC_GENE>>Genes</option>
  </select>
 <tr>
   <td>Master image width (0 == dynamic)  <input type=text name=master_width id=master_width size=6 value="<TMPL_VAR NAME="MWIDTH">">
 <tr>
   <td>Minimum chromosome size:   <input type=text name=min_chr_size id=min_chr_size size=6 value="<TMPL_VAR NAME="MIN_CHR_SIZE">">
  <TR>
    <TD>Order contigs by best syntenic path?
   <input type=checkbox name="assemble" id="assemble" onclick="$('#assemble_info').toggle();" <TMPL_VAR NAME=SYNTENIC_PATH>><br>
   <span class=small id='assemble_info' style="display: none; color: red;">
    <li>This option assumes that one of the organisms is the reference genome, and the other is a whole genome shotgun sequence with contig level assembly.   The genome with fewer chromosomes/contigs will automatically be used as the reference genome.
    <li>Don't show contigs without synteny?<input type=checkbox name="show_non_syn" id="show_non_syn" <TMPL_VAR NAME=SHOW_NON_SYN>><span><br>
  <TR>
   <td>E-mail results? <input type=checkbox id=check_email onclick="toggle_email_field()">
		<div class="email_box small" style="display:none;"><table class="backbox"><tr><td>Your E-mail Address: <td><input type=text id=email onBlur='address_validity_check()'>
		
		<font id=email_error class="small" style="display: none; color: red;">You have supplied an invalid e-mail address.</font></div>
		<tr><td><div class=email_box style="display:none;">Job Title:
		<td><input type=text id=jobtitle> <span class='ui-button ui-state-default ui-corner-all' onClick="fill_jobtitle()">Use Org Names</span></div>
		</table>

</TABLE>
</div> <!-- close tab-3 -->
</div> <!--close tabs div-->
Previously run parameters: 
<span id="hide_previous" class='show_prev_button ui-button ui-state-default ui-corner-all' onClick="$('.previous_analyses').toggle(); $('.show_prev_button').toggle();">Hide</span>
<span id="show_previous" style="display:none" class='show_prev_button ui-button ui-state-default ui-corner-all' onClick="$('.previous_analyses').toggle(); $('.show_prev_button').toggle();">Show</span>
<div class="small previous_analyses">(Clicking on row automatically selects and sets SynMap genomes and parameters.)</div>
<div id=previous_analyses class="previous_analyses"></div>

</TMPL_IF>

<TMPL_IF NAME=ORG_MENU>
<td>
<div class="ui-widget-content resizable" style="float: left; padding: 0.3em">
<DIV class = "oblique">Organism <TMPL_VAR NAME="NUM"> Search: </DIV>
   <DIV><span class=small>Name: <input type="text" size=10 value="<TMPL_VAR NAME="ORG_NAME">" name = "org_name<TMPL_VAR NAME="NUM">" id="org_name<TMPL_VAR NAME="NUM">" style="font-style:italic" onFocus="search_bar('org_name<TMPL_VAR NAME="NUM">')" onKeyUp='timing("org_name<TMPL_VAR NAME="NUM">");'><span><span class='ui-button ui-state-default ui-corner-all' onClick="timing('org_name<TMPL_VAR NAME="NUM">');"><span class="ui-icon ui-icon-arrowrefresh-1-w"></span></span>
   Description: <input type="text" size=10 value="<TMPL_VAR NAME="ORG_DESC">" name = "org_desc<TMPL_VAR NAME="NUM">" id="org_desc<TMPL_VAR NAME="NUM">" style="font-style:italic" onFocus="search_bar('org_desc<TMPL_VAR NAME="NUM">')" onKeyUp='timing("org_desc<TMPL_VAR NAME="NUM">");'><span class='ui-button ui-state-default ui-corner-all' onClick="timing('org_desc<TMPL_VAR NAME="NUM">');"><span class="ui-icon ui-icon-arrowrefresh-1-w"></span></span>
</DIV>
   <DIV id="org_list<TMPL_VAR NAME="NUM">"><TMPL_VAR NAME="ORG_LIST"></DIV>
   <Table><Tr>
     <td>Genome:
     <td><DIV id="dsg_menu<TMPL_VAR NAME="NUM">">
         <TMPL_VAR NAME="DSG_MENU">
         </div>

     <td>
     <DIV id="feattype_menu<TMPL_VAR NAME="NUM">">
     <TMPL_IF NAME="FEATTYPE_MENU">
       <TMPL_VAR NAME="FEATTYPE_MENU">
     <TMPL_ELSE>
      <input type=hidden id=feat_type<TMPL_VAR NAME="NUM">>
     </TMPL_IF>
         </div>
    <TR><Td colspan=3><div id="genome_message<TMPL_VAR NAME="NUM">"><TMPL_VAR NAME="GENOME_MESSAGE"></div>
     </table>
<DIV style="vertical-align: top;" id="dsg_info<TMPL_VAR NAME="NUM">"><TMPL_VAR NAME="DSG_INFO"></DIV>
</div>
</TMPL_IF>