<TMPL_IF NAME='LOGIN'>
    <TMPL_INCLUDE NAME="widgets/Login.tmpl">
</TMPL_IF>

<TMPL_IF NAME='MAIN'>
<script type="text/javascript" src="js/pages/load-experiment.js"></script>
<script type="text/javascript" src="js/coge/utils.js"></script>
<script type="text/javascript" src="./js/jquery.fileupload.js"></script>

<style type="text/css">

@font-face {
	font-family: 'Glyphicons Halflings';
	src: url('./js/vendor/bootstrap/fonts/glyphicons-halflings-regular.eot');
	src: url('./js/vendor/bootstrap/fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('./js/vendor/bootstrap/fonts/glyphicons-halflings-regular.woff') format('woff'), url('./js/vendor/bootstrap/fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('./js/vendor/bootstrap/fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');
}

.glyphicon {
	position: relative;
	top: 1px;
	display: inline-block;
	font-family: 'Glyphicons Halflings';
	font-style: normal;
	font-weight: normal;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.glyphicon-asterisk:before {
	content: "\2a";
}

.jstree li a ins { display:none !important; }
.jstree.jstree-focused { background:white; }
</style>

<script type="text/javascript">

const STATUS_URL = '<TMPL_VAR NAME="STATUS_URL">';
const PAGE_NAME = '<TMPL_VAR NAME="PAGE_NAME">';

var timestamps = new Array();
var load_id = '<TMPL_VAR NAME="LOAD_ID">'; // required by FileSelect.tmpl
var job_id = '<TMPL_VAR NAME="JOB_ID">';
var embed = '<TMPL_VAR NAME="EMBED">';
var experiment_id;
var notebook_id;
var pageObj = {};
var newLoad = false;

$(document).ready(function(){
	// Configure jQuery ajax
    $.ajaxSetup({
        type: "GET",
        url: PAGE_NAME,
        dataType: "html",
        cache: false,
    });

    pageObj.user = "<tmpl_var name=USER>";

    // Configure dialogs
    $(".dialog_box").dialog({autoOpen: false, width: 500});
    $('#load_dialog').dialog("widget").find('.ui-dialog-titlebar-close').hide();
    $('#load_dialog').dialog({modal: true, closeOnEscape: false})

    // Initialize drop-downs
    get_sources();

    $("#edit_genome").autocomplete({
        source:[],
        select: function(event, ui) {
            $('#edit_genome').val(ui.item.label);
            $('#gid').val(ui.item.value);
            return false; // Prevent the widget from inserting the value.
        },
        focus: function(event, ui) {
            //$("#edit_genome").val(ui.item.label);
            return false; // Prevent the widget from inserting the value.
        }
    });

    $("#file_type_selector").on("change", function() {
        var alignment = $("#alignment");
        var pipeline =$("#fastq-pipeline");
        if ($(this).val() === "fastq") {
           alignment.slideDown();
           pipeline.slideDown();
        } else {
           alignment.slideUp();
           pipeline.slideUp();
        }
    });

    // Open status dialog
    if (job_id) {
        $('#loading_msg').hide();
        $('#load_dialog').dialog('open');
        update_dialog(STATUS_URL + job_id, pageObj.user, "#load_dialog", progress_formatter);
    }

    <TMPL_IF NAME="ADMIN_AREA">
    $("#edit_user").autocomplete({
        source:[],
        focus: function() { return false; },
    });
    </TMPL_IF>

    initialize();
});

function file_selected(filename, url) {
    $('#select_file_button').hide();
    $('#select_file_type').show();
    $('#files').show();
}

function file_finished(size, url) {
    var files = get_selected_files(),
        exp = /(:?fastq|fq)/;

    var isFastq = exp.test.bind(exp);
    var paths = files.map(getPath);
    paths.forEach(autodetect_file_type);

    if (paths.some(isFastq)) {
        $("#file_type_selector")
            .find("option[value=fastq]")
            .prop("selected", true)
            .change();
    }
}

function getPath(item) {
    return item.path;
}

function file_canceled() {
    $('#select_file_type').hide()
        .find("option[value=autodetect")
        .prop("selected", true)
        .change();

    $('#files').hide();
    $('#select_file_button').show();
}

function create_source() {
    var name = $('#edit_source_name').val();
    var desc = $('#edit_source_desc').val();
    var link = $('#edit_source_link').val();
    $.ajax({
        data: {
            fname: 'create_source',
            name: name,
            desc: desc,
            link: link,
        },
        success : function(name) {
            $('#create_new_source_dialog').dialog('close');
            if (name) {
                $('#edit_source').val(name);
            }
        }
    });
}

function reset_log() {
    $('#load_log').html('');
    $('#loading_msg').show();
    $('#ok_button,#error_msg,#finished_msg,#finish_load_experiment_button,#cancel_load_experiment_button,#logfile').hide();
}

function load_experiment() {
    var name = $('#edit_name').val();
    var description = $('#edit_description').val();
    var version = $('#edit_version').val();
    var restricted = $('#restricted').is(':checked');
    var genome = $('#edit_genome').val();
    var gid = $('#gid').val();
    var file_type = $("#select_file_type option:selected").val();
    var aligner = $("#alignment").find(":checked").val();
    var ignore_cb = $('#ignore_missing_chrs');
    var ignore_missing_chrs = ignore_cb.is(':checked');

    if (!name) {
    	error_help('Please specify an experiment name.');
        return;
    }
    if (!version) {
    	error_help('Please specify an experiment version.');
        return;
    }
    if (!genome || genome == 'Search') {
    	error_help('Please specify a genome.');
        return;
    }

    var source = $('#edit_source').val();
    if (!source || source == 'Search') {
    	error_help('Please specify a data source.');
        return;
    }

    var items = get_selected_files();
    if (items == null) {
    	error_help('Files are still being transferred, please wait.');
        return;
    }
    else if (items.length == 0) {
    	error_help('Please select a data file.');
        return;
    }
    var json = JSON.stringify(items);

    // Prevent concurrent executions - issue 101
    if ( $("#load_dialog").dialog( "isOpen" ) )
        return;

    // Make sure user is still logged-in - issue 206
    if (!check_login()) {
        alert('Your session has expired, please log in again.');
        location.reload(true)
        return;
    }

    // Open status dialog right away - issue 101
    reset_log();
    $('#load_dialog').dialog('open');
    $('#load_log').html('Initializing ...');
    newLoad = true;

    $.ajax({
        data: {
            fname: 'load_experiment',
            load_id: load_id,
            name: name,
            description: description,
            version: version,
            restricted: restricted,
            gid: gid,
            source_name: source,
            items: json,
            file_type: file_type,
            aligner: aligner,
            ignore_missing_chrs: ignore_missing_chrs,
            timestamp: new Date().getTime()
        },
        success : function(data) {
            var obj = jQuery.parseJSON(data);
            if (obj && obj.error) {
                alert(obj.error);
                return;
            }

            // Set link in status dialog
            $('#loading_msg span a').attr('href', obj.link).html(obj.link);

            // Start status update
            if (obj.job_id) { // JEX status for load FASTQ
                job_id = obj.job_id;
                window.history.pushState({}, "Title", PAGE_NAME + "?job_id=" + obj.job_id); // Add job_id to browser URL
                update_dialog(STATUS_URL + obj.job_id, pageObj.user, "#load_dialog", progress_formatter);
            }
        }
        // TODO: handle ajax error, show in status dialog
    });
}

function get_load_log(callback) {
    $.ajax({
        data: {
            dataType: 'text',
            fname: 'get_load_log',
            workflow_id: job_id,
            timestamp: new Date().getTime()
        },
        success : function(data) {
            if (callback) {
            	var obj = jQuery.parseJSON(data);
                callback(obj);
                return;
            }
        }
    });
}

function load_failed(logfile) {
	// mdb added 6/24/14 - temporary message until JEX logging is improved
	var msg =
		'<div class="alert">' +
		'The CoGe Support Team has been notified of this error but please ' + 
		'feel free to contact us at <a href="mailto:<TMPL_VAR NAME=SUPPORT_EMAIL>"><TMPL_VAR NAME=SUPPORT_EMAIL></a> ' +
		'and we can help to determine the cause.' +
		'</div>';
	var log = $('#load_log');
	log.html( log.html() + msg );


    if (logfile) {
        $("#logfile a").attr("href", logfile);
        $('#logfile').fadeIn();
    }

    // Update dialog
    $('#loading_msg').hide();
    $('#error_msg,#cancel_load_experiment_button').fadeIn();

    if (newLoad) { // mdb added check to prevent redundant emails, 8/14/14 issue 458
	    $.ajax({
	        data: {
	            fname: "send_error_report",
	            load_id: load_id,
	            job_id: job_id
	        }
	    });
    }
}

function load_succeeded(obj) {
    // Update globals
    experiment_id = obj.experiment_id; // for continuing to ExperimentView
    notebook_id   = obj.notebook_id;   // for continuing to NotebookView

    // Update dialog
    $('#loading_msg').hide();
    $('#finished_msg,#ok_button').fadeIn();
    if (notebook_id) { // qTeller pipeline experiment load
        $('#finish_load_experiment_button')
            .html('NotebookView').fadeIn()
            .unbind().on('click', function() {
                window.location.href = "NotebookView.pl?nid=" + notebook_id;
        });
    }
    else { // normal experiment load
        $('#finish_load_experiment_button')
            .html('Continue to ExperimentView').fadeIn()
            .unbind().on('click', function() {
                window.location.href = "ExperimentView.pl?embed=" + embed + "&eid=" + experiment_id;
        });
    }
}

function reset_load() {
    window.history.pushState({}, "Title", PAGE_NAME);
    $('#load_dialog').dialog('close');

    // Reset file selector
    file_canceled();
    clear_list();
}

function wait_to_search (search_func, search_obj) {
    var search_term = search_obj.value;
    if (!search_term || search_term.length >= 2) {
        if (pageObj.time) {
            clearTimeout(pageObj.time);
        }

        pageObj.time = setTimeout(
            function() {
                search_func(search_obj.value);
            },
            250
        );
    }
}

function search_genomes (search_term) {
    $.ajax({
        data: {
            fname: 'search_genomes',
            search_term: search_term,
            timestamp: new Date().getTime()
        },
        success : function(data) {
            var obj = jQuery.parseJSON(data);
            if (obj.items) {
                obj.items.forEach(function(element) {
                    element.label = element.label.replace(/&reg;/g, "\u00ae"); // (R)
                });
                $("#edit_genome").autocomplete({source: obj.items});
                $("#edit_genome").autocomplete("search");
            }
        },
    });
}

function search_users (search_term) {
    $.ajax({
        data: {
            fname: 'search_users',
            search_term: search_term,
            timestamp: new Date().getTime()
        },
        success : function(data) {
            var obj = jQuery.parseJSON(data);
            if (obj && obj.items) {
                $("#edit_user").autocomplete({source: obj.items});
                $("#edit_user").autocomplete("search");
            }
        },
    });
}

function get_sources () {
    $.ajax({
        data: {
            fname: 'get_sources',
        },
        success : function(data) {
            var obj = jQuery.parseJSON(data);
            if (obj) {
                $("#edit_source").autocomplete({source: obj});
            }
        },
    });
}

function progress_formatter(item) {
    var msg;
    var row = $('<li>'+ item.description + ' </li>');

    var job_status = $('<span></span>');

    if (item.status == 'scheduled')
        job_status.append(item.status).addClass('down bold');
    else if (item.status == 'completed')
        job_status.append(item.status).addClass('completed bold');
    else if (item.status == 'running')
        job_status.append(item.status).addClass('running bold');
    else if (item.status == 'skipped')
        job_status.append("already generated").addClass('skipped bold');
    else if (item.status == 'cancelled')
        job_status.append(item.status).addClass('alert bold');
    else if (item.status == 'failed')
        job_status.append(item.status).addClass('alert bold');
    else
        return;

    row.append(job_status);

    if (item.elapsed)  {
        row.append(" in " + coge.utils.toPrettyDuration(item.elapsed));
    }

    if (item.log) {
        var p = item.log.split("\n");

        var pElements = p.map(function(item) {
            var norm = item.replace(/\\t/g, " ").replace(/\\'/g, "'");
            return $("<div></div>").html(norm);
        });

        var log = $("<div></div>").html(pElements).addClass("padded");
        row.append(log);
    }

    return row;
}

function update_dialog(request, user, identifier, formatter) {
    var get_status = function () {
        $.ajax({
            type: 'GET',
            url: request,
            dataType: 'json',
            data: {
                username: user
            },
            success: update_callback,
            error: update_callback,
            xhrFields: {
                withCredentials: true
            }
        });
    };

    var update_callback = function(json) {
        var dialog = $(identifier);
        var workflow_status = $("<p></p>");
        var data = $("<ul></ul>");
        var results = [];
        var current_status;
        var timeout = 2000;

        var callback = function() {
            update_dialog(request, user, identifier, formatter);
        }

        if (json.error) {
            pageObj.error++;
            if (pageObj.error > 3) {
                workflow_status.html('<span class=\"alert\">The job engine has failed.</span>');
                var logfile;

                if (json.results.length) {
                    logfile = json.results[0].path;
                }
                load_failed(logfile);
                return;
            }
        } else {
            pageObj.error = 0;
        }

        if (json.status) {
            current_status = json.status.toLowerCase();
            workflow_status
            	.html("Workflow status: ")
            	.append( $('<span></span>').html(json.status) )
            	.addClass('bold');
        } else {
            setTimeout(callback, timeout);
            return;
        }

        if (json.tasks) {
            var jobs = json.tasks;
            for (var index = 0; index < jobs.length; index++) {
                var item = formatter(jobs[index]);
                if (item) {
                    results.push(item);
                }
            }
        }

        if (!dialog.dialog('isOpen')) {
            return;
        }

        //FIXME Update when a workflow supports elapsed time
        if (current_status == "completed") {
            var total = json.tasks.reduce(function(a, b) {
                if (!b.elapsed) return a;

                return a + b.elapsed;
            }, 0);

            var duration = coge.utils.toPrettyDuration(total);

            workflow_status.append("<br>Finished in " + duration);
            workflow_status.find('span').addClass('completed');
            get_load_log(function(result) {
                load_succeeded(result);
            });

        }
        else if (current_status == "failed"
                || current_status == "error"
                || current_status == "terminated"
                || current_status == "cancelled")
        {
            workflow_status.find('span').addClass('alert');

            if (json.results.length) {
                logfile = json.results[0].path;
            }
            load_failed(logfile);
        }
        else if (current_status == "notfound") {
            setTimeout(callback, timeout);
            return;
        }
        else {
            workflow_status.find('span').addClass('running');
            setTimeout(callback, timeout);
        }

        results.push(workflow_status);
        data.append(results);
        dialog.find('#load_log').html(data);
    };

    get_status();
}

</script>

<div id="wizard" class="wizard wizard-coge">
    <div class="header">
        <h3 class="title">Load Experiment</h3>
        <div class="sections">
        </div>
    </div>

    <div id='error_help_text' class='alert-box alert-box-warn hidden'></div>

    <div class="step" data-title="Describe your Experiment" data-step="1" data-validate="description">

        <div class="form-field">
            <label class="col-md-2">Name:</label>
            <input id="edit_name" type="textbox" class="col-md-8" value="<TMPL_VAR NAME='NAME'>" spellcheck="false" />
            <span style="color: red; font-size: 0.75em" class="col-md-2 glyphicon glyphicon-asterisk"></span>
        </div>

        <div class="form-field">
            <label class="col-md-2">Description:</label>
            <textarea id="edit_description" class="col-md-8 no-resize" rows="5" cols="50" ><TMPL_VAR NAME='DESC'></textarea>
        </div>

        <div class="form-field">
            <label class="col-md-2">Version:</label>
            <input id="edit_version" type="textbox" class="col-md-8" size="10" value="<TMPL_VAR NAME='NAME'>" spellcheck="false" />
            <span style="color: red; font-size: 0.75em" class="col-md-2 glyphicon glyphicon-asterisk"></span>
        </div>

        <div class="form-field">
            <label class="col-md-2">Source:</label>

            <div>
                <input id="edit_source" type="search" class="col-md-6" placeholder="Search" size="50" spellcheck="false" onclick='$(this).autocomplete("search");' />

                <div class="col-md-2">
                    <span id="new_source_button" onClick="$('#create_new_source_dialog').dialog('open'); activate_on_input('edit_source_name', 'create_source_button');" class='ui-button ui-corner-all'>New</span>
                </div>
            </div>

            <span style="color: red; font-size: 0.75em" class="col-md-2 glyphicon glyphicon-asterisk"></span>
        </div>

        <div class="form-field">
            <label class="col-md-2">Restricted?</label>
            <input id="restricted" type="checkbox" checked>
        </div>

        <div class="form-field">
            <label class="col-md-2">Genome:</label>
            <input class="col-md-8" id="edit_genome" type="search" placeholder="Search" spellcheck="false" onclick='$(this).autocomplete("search");' onkeypress="wait_to_search(search_genomes, this);" size="50" value="<TMPL_VAR NAME='GENOME_NAME'>" />
            <input id="gid" type="hidden" value="<TMPL_VAR NAME='GENOME_ID'>" />
            <span style="color: red; font-size: 0.75em" class="col-md-2 glyphicon glyphicon-asterisk"></span>
        </div>
    </div>

    <div class="step" data-title="Data" data-step="2" data-validate="data">
        <TMPL_INCLUDE NAME='widgets/FileSelect.tmpl'>

        <div id="files" class="hidden">
            Data file:
            <table id='file_table' class="ui-corner-all coge-outline" style="background-color:white;font-size:1em;display:inline;"></table>
            <span id="select_file_type" class="hidden" style="padding-left:15px;vertical-align:5px;">
                File type:
                <select id="file_type_selector">
                    <option value="autodetect">Detect from filename</option>
                    <optgroup label="Quantitative">
                    <option value="csv">Comma-separated value (CSV)</option>
                    <option value="tsv">Tab-separated value (TSV)</option>
                    <option value="bed">BED</option>
                    <option value="gff">GFF/GTF</option>
                    </optgroup>
                    <optgroup label="Polymorphism">
                    <option value="vcf">VCF</option>
                    </optgroup>
                    <optgroup label="Alignment">
                    <option value="bam">BAM</option>
                    </optgroup>
                    <optgroup label="Sequence">
                    <option value="fastq">FASTQ, FQ</option>
                    </optgroup>
                </select>

                <span style="color: red; font-size: 0.75em" class="glyphicon glyphicon-asterisk"></span>
            </span>
        </div>
    </div>

    <div class="step" data-title="Options" data-step="3" data-validate="options">
        <div id="fastq" class="hidden">
            <div class="form-section">
                <h4>RNA-Seq Options</h4>
                <div class="form-field">
                    <label class="col-md-2">Samtools (mpileup):</label>
                    <div>
                        <label>-Q:</label>
                        <input id="Q" type="number" value="5"/>
                    </div>
                </div>
            </div>

            <div class="form-section">
                <h4>Alignment Options</h4>

                <div class="form-field">
                    <label class="col-md-2">Aligner:</label>
                    <div id="alignment">
                        <input name="aligner" type="radio" value="gsnap" checked onchange="update_aligner()">
                        <label for="gsnap">GSNAP</label>

                        <input name="aligner" type="radio" value="tophat" onchange="update_aligner()">
                        <label for="gsnap">TopHat/Bowtie2</label>
                    </div>
                </div>

                <div id="align-container" class="hidden"></div>
            </div>

            <div class="form-section">
                <h4>SNP Options</h4>

                <div class="form-field">
                    <label class="col-md-2">Find SNPs:</label>

                    <label >Enable:</label>
                    <input id="snps" type="checkbox" onchange="update_snp(window.event)">

                    <label>Method:</label>
                    <select id="snp-method" disabled>
                        <option value="coge">CoGe Method</option>
                        <option value="samtools">Samtools Method</option>
                        <option value="platypus">Platypus Method</option>
                        <option value="gatk">GATK Method</option>
                    </select>
                </div>

                <div id="snp-wrapper" class="hidden"></div>
            </div>
        </div>

        <!-- TODO: Add remaining options -->
        <div id="align" class="hidden"></div>
        <div id="poly"  class="hidden"></div>
        <div id="quant" class="hidden"></div>

        <div class="form-section">
            <h4>Misc Options</h4>

            <div class="form-field">
                <label class="col-md-2">Add to notebook:</label>
                <input id="notebook" type="checkbox">
            </div>
            <div class="form-field">
                <label class="col-md-2">Send an email:</label>
                <input id="email" type="checkbox">
            </div>

            <!-- TODO: Add ability to share the genome
            <div class="form-field">
                <label class="col-md-2">Share:</label>
                <input id="email" type="checkbox">
            </div>
            -->
        </div>
    </div>

    <div class="step" data-title="Review and Load" data-step="3" data-validate="options">
        Test 4
    </div>

    <div class="nav-control coge-buttonset">
        <button class="prev ui-button ui-corner-all" disabled>Previous</button>
        <button class="done ui-button ui-corner-all r" disabled>Start Loading</button>
        <button class="next ui-button ui-corner-all r">Next</button>
    </div>
</div>


<!-- Admin area -->
<TMPL_IF NAME='ADMIN_AREA'>
    <br><br><hr>
    <div class="bold text">Admin Functions</div>
    <div class="small">
        <div>
            Assign to user:
            <input id="edit_user" type="search" placeholder="Search" spellcheck="false" onkeyup="wait_to_search(search_users, this.value);" size="20" />
        </div>
        <!--
        <div>
            Ignore missing chromosomes?
            <input id="ignore_missing_chrs" type="checkbox" />
        </div>
        -->
    </div>
</TMPL_IF>

<!-- DIALOGS -->
<div id="load_dialog" class="dialog_box" title="Loading Experiment ..." style="display:none;">
    <div id="load_log" class="small padded ui-widget-content ui-corner-all" style="overflow-y:auto;width:450px;height:200px;color:dimgray;">
    </div>
    <br>
    <div id="loading_msg">
        <span class="small" style="float:right;">Link: <a></a></span>
        Please wait ... <img src="picts/ajax-loader.gif"/>
    </div>
    <div class="coge-buttonset">
        <span id="finished_msg" style="display:none;">Finished! <img src="picts/thumbs_up.png"></span>
        <span id="error_msg" style="display:none;">An error occurred <img src="picts/thumbs_down.png"></span>
        <span id="ok_button" onClick="reset_load();" style="display:none;float:right;" class="ui-button ui-corner-all">Load Another</span>
        <span id="finish_load_experiment_button" style="display:none;float:right;" class="ui-button ui-corner-all">ExperimentView</span>
        <span id="cancel_load_experiment_button" onClick="reset_load();" style="display:none;float:right;" class="ui-button ui-corner-all ui-button-go">Cancel</span>
        <span id="logfile" class="hidden"><a href="">Logfile</a></span>
    </div>
</div>

<div id="create_new_source_dialog" class="dialog_box" title="Create New Source" style="display:none;">
    <table class="small">
        <tr>
            <td>Name:</td>
            <td><input id="edit_source_name" type="textbox" size="53" onkeyup="activate_on_input('edit_source_name', 'create_source_button');" /></td>
        </tr><tr>
            <td>Description:</td>
            <td><textarea id="edit_source_desc" rows="5" cols="50" ></textarea></td>
        </tr><tr>
            <td>Link:</td>
            <td><input id="edit_source_link" type="textbox" size="53" /></td>
            </tr>
    </table>
    <br>
    <span id="create_source_button" onClick="create_source();" class="ui-state-disabled ui-button ui-corner-all">Create</span>
</div>

<!-- Alignment Templates -->
<script id="tophat-template" type="text/template">
    <div id="tophat">
        <div class="form-field">
            <label class="col-md-2">TopHat:</label>
            <div>
                <label>-g:</label>
                <input id="g" type="number" value="5"/>
            </div>
        </div>
    </div>
</script>

<script id="gsnap-template" type="text/template">
    <div id="gsnap">
        <div class="form-field">
            <label class="col-md-2">CutAdapt:</label>
            <div class="form-group">
                <div class="form-entry">
                    <label>-q:</label>
                    <input id="q" type="number" value="5"/>
                </div>
                <div class="form-entry">
                    <label>-m:</label>
                    <input id="m" type="number" value="5"/>
                </div>
                <div class="form-entry">
                    <label>--quality-base:</label>
                    <input id="quality" type="number" value="5"/>
                </div>
            </div>
        </div>

        <div class="form-field">
            <label class="col-md-2">Alignment:</label>
            <div class="form-group">
                <div class="form-entry">
                    <label>-n:</label>
                    <input id="n" type="number" value="5"/>
                </div>

                <div class="form-entry">
                    <label>-Q:</label>
                    <input id="Q" type="number" value="5"/>
                </div>
                <div class="form-entry">
                    <label>--gap-mode:</label>
                    <select id="gap">
                        <option>none</option>
                    </select>
                </div>
                <div class="form-entry">
                    <label>--no-fails:</label>
                    <input id="nofail" type="checkbox" checked/>
                </div>
            </div>
        </div>
    </div>
</script>

<!-- SNP Finder Templates -->
<script id="coge-snp-template" type="text/template">
    <div id="coge">
        <div class="form-field">
            <label class="col-md-2">CoGe Options:</label>
            <div class="form-group">
                <div class="form-entry">
                    <label>minimum read depth:</label>
                    <input id="min-read" type="number" value="10"/>
                </div>
                <div class="form-entry">
                    <label>minimum base quality:</label>
                    <input id="min-base" type="number" value="20"/>
                </div>
                <div class="form-entry">
                    <label>minimum high-quality allele count:</label>
                    <input id="allele-count" type="number" value="4"/>
                </div>
                <div class="form-entry">
                    <label>minimum allele frequency:</label>
                    <input id="min-allele-freq" type="number" step="0.1" value="0.1"/>
                </div>
                <div class="form-entry">
                    <label>scale for FAST quality encoding:</label>
                    <input id="scale" type="number" value="32"/>
                </div>
            </div>
        </div>
    </div>
</script>

<script id="samtools-snp-template" type="text/template">
    <div id="samtools" class="form-field">
        <label class="col-md-2">Samtools Options</label>

        <div class="form-group">
            <div class="form-entry">
                <label>minimum read depth:</label>
                <input id="min-read-depth" type="number" value="6"/>
            </div>
            <div class="form-entry">
                <label>maximum read depth:</label>
                <input id="max-read-depth" type="number" value="10"/>
            </div>
        </div>
    </div>
</script>

<script id="platypus-snp-template" type="text/template">
    <div id="platypus" class="form-field">
        <label class="col-md-2">Platypus Options:</label>
        <div class="form-group">
            <div class="form-entry">
                <label>-g:</label>
                <input type="number" value="5"/>
            </div>
            <div class="form-entry">
                <label>-g:</label>
                <input type="number" value="5"/>
            </div>
        </div>
    </div>
</script>

<script id="gatk-snp-template" type="text/template">
    <div id="gatk" class="form-field">
        <label class="col-md-2">GATK Options:</label>
        <div class="form-group">
            <div class="form-entry">
                <label>-g:</label>
                <input type="number" value="5"/>
            </div>
            <div class="form-entry">
                <label>-g:</label>
                <input type="number" value="5"/>
            </div>
        </div>
    </div>
</script>

</TMPL_IF> <!-- MAIN -->
